name: Poetry build & publish release

on:
  pull_request:
    branches:
      - master
    types: closed

jobs:
  build:
    name: Poetry build .whl artifacts
    if: |
      github.event.pull_request.merged == true
      ${{ startsWith(github.event.pull_request.title, 'pre-') && endsWith(github.event.pull_request.title, '-release')}}

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v3
      with:
        python-version: ${{ vars.PYTHON }}

    - name: Set up Poetry environment
      uses: snok/install-poetry@v1

    - name: Deps & build
      run: |
        poetry install --no-interaction
        poetry build -f wheel -vv

    - uses: actions/upload-artifact@v4
      with:
        name: wheel
        path: dist/*.whl

  artifacts:
    needs: build

    name: Publish artifacts on releases
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Set envvars for version name
      run: |
        echo "VER=$( echo '${{ github.event.pull_request.title }}' | sed -r 's/^pre-(.+)-release$/\1/; t; d' )" >> $GITHUB_ENV

    - name: Check VER value is present
      run: |
        [ $VER ]

    - name: Retrieve artifacts and repo
      uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        name: wheel

    - name: Set tag and publish release
      run: |
        gh release create \
          $VER *whl \
          --title="$VER" \
          --repo="$GITHUB_REPOSITORY" \
          --generate-notes \

